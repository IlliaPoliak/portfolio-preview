{"version":3,"sources":["components/common/BackBtn/BackBtn.jsx","components/common/BackBtn/BackBtn.module.css","components/Works/Calculator/Calculator.module.css","components/Works/Calculator/CalcBtns.jsx","components/Works/Calculator/MoreBtns.jsx","components/Works/Calculator/Calculator.jsx"],"names":["connect","state","darkMode","app","className","styles","backBtnWrapper","onClick","window","history","back","backBtn","darkModeStyle","module","exports","CalcBtns","props","btnsWrapper","map","btn","calculateBtn","equal","id","key","handleClickButton","MoreBtns","style","fontSize","Calculator","useState","moreBtns","setMoreBtns","inputValue","setInputValue","isError","setIsError","ref","useRef","e","value","target","resultRef","current","slice","calculate","sign","res","expression","regex","percentIndex","search","express","percent","evaluate","Number","isInteger","toFixed","Infinity","console","log","message","calculatorWrapper","calculator","type","disabled","resultInput","calculatingError","more","BackBtn"],"mappings":"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","file":"static/js/11.b0dc5189.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './BackBtn.module.css'\nimport { connect } from 'react-redux';\n\nconst BackBtn = ({ darkMode }) => <div className={styles.backBtnWrapper} onClick={() => window.history.back()}>\n    <div className={darkMode ? styles.backBtn : `${styles.backBtn} ${styles.darkModeStyle}`}>\n        <span>&#10144;</span>&nbsp;Go back\n    </div>\n</div>\n\nexport default connect(state => ({\n    darkMode: state.app.darkMode\n}), {})(BackBtn)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backBtnWrapper\":\"BackBtn_backBtnWrapper__7wkgF\",\"backBtn\":\"BackBtn_backBtn__256f_\",\"darkModeStyle\":\"BackBtn_darkModeStyle__1x3h1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calculatorWrapper\":\"Calculator_calculatorWrapper__19ruV\",\"calculator\":\"Calculator_calculator__3gg25\",\"resultInput\":\"Calculator_resultInput__WflQd\",\"calculatingError\":\"Calculator_calculatingError__3p2Yt\",\"btnsWrapper\":\"Calculator_btnsWrapper__3yK60\",\"calculateBtn\":\"Calculator_calculateBtn__1qe5q\",\"equal\":\"Calculator_equal__1oyXo\",\"more\":\"Calculator_more__1zZ7S\",\"moreBtns\":\"Calculator_moreBtns__3SNMk\"};","import React from 'react';\nimport styles from './Calculator.module.css'\n\nconst CalcBtns = (props) => {\n\n    const buttons = [\n        'C', 'CE', '/', '*',\n        '7', '8', '9', '-',\n        '4', '5', '6', '+',\n        '1', '2', '3', '%',\n        '.', '0', '=',\n    ]\n\n    return <div className={styles.btnsWrapper}>\n        {buttons.map(btn => (\n            <div\n                className={btn === '=' ? `${styles.calculateBtn} ${styles.equal}` : styles.calculateBtn}\n                id={btn}\n                key={btn}\n                onClick={props.handleClickButton}\n            >\n                {btn === '/' ? <>&#247;</> \n                : btn === '*' ? <>&#215;</> \n                : btn === '-' ? <>&#8722;</> \n                : btn}\n            </div>\n        ))}\n    </div>\n}\n\nexport default CalcBtns","import React from 'react';\nimport styles from './Calculator.module.css'\n\nconst MoreBtns = (props) => {\n\n    const moreButtons = [\n        'sqrt', 'cbrt', '(', ')',\n        'pi', 'e', 'sin', 'cos',\n        'tan', 'log10', '!', '^'\n    ]\n\n    return (\n        moreButtons.map( btn => (\n            <div\n                className={styles.calculateBtn}\n                id={btn}\n                key={btn}\n                onClick={props.handleClickButton}\n            >\n                {btn === 'pi' ? <>&#960;</> \n                : btn === 'cbrt' ? <><sup style={{fontSize: 10}}>3</sup>&#8730;</> \n                : btn === 'sqrt' ? <>&#8730;</> \n                : btn}\n            </div>\n        ))\n    )\n}\n\nexport default MoreBtns","import React, { useRef, useState } from 'react';\nimport { evaluate } from 'mathjs'\nimport styles from './Calculator.module.css'\nimport CalcBtns from './CalcBtns'\nimport MoreBtns from './MoreBtns'\nimport BackBtn from '../../common/BackBtn/BackBtn';\n\nconst Calculator = () => {\n\n    let [moreBtns, setMoreBtns] = useState(false)\n    let [inputValue, setInputValue] = useState('')\n    let [isError, setIsError] = useState(false)\n\n    const ref = useRef()\n\n    const handleClickButton = e => {\n        const value = e.target.id //|| e.key\n        const resultRef = ref.current\n\n        switch (value) {\n            case 'C': \n                resultRef.value = ''\n                setInputValue('')\n                break;\n            case 'CE': case 'Backspace': \n                setInputValue(inputValue.slice(0, -1))\n                break;\n            case 'log10':\n            case 'sin':\n            case 'cos':\n            case 'tan':\n            case 'sqrt':\n            case 'cbrt': \n                setInputValue(inputValue + value + '(')\n                break;\n            case '!':\n            case 'pi':\n            case 'e':\n            case '.':\n            case '(':\n            case ')': \n                setInputValue(inputValue + value)\n                break;\n            case '^':\n            case '+':\n            case '-':\n            case '*':\n            case '/':\n            case '%':\n                if (value === '%') {\n                    resultRef.value += value\n                    calculate(value)} \n                else { setInputValue(inputValue + value) }\n                break;\n            case '=': calculate()\n                break;\n            default: resultRef.value[0] === '0' && resultRef.value[1] !== '.'\n                ? setInputValue(value)\n                : setInputValue(inputValue + value)\n                break;\n        }\n    }\n\n    const calculate = (sign = '=') => {\n        try {\n            setIsError(false)\n            let res = 0\n            let expression = ref.current.value\n\n            if (sign === '%') {\n                const regex = /(-|\\+|\\*|\\/)?(\\d+)?(\\.)?(\\d+)?%/\n                const percentIndex = expression.search(regex) === -1 ? false : expression.search(regex)\n                if (percentIndex) {\n                    const express = expression.slice(0, percentIndex) || 0\n                    const sign = expression.slice(percentIndex, percentIndex + 1) || '+'\n                    const percent = expression.slice(percentIndex + 1, -1)\n\n                    if (sign === '+' || sign === '-') {\n                        res = `${evaluate(express)} ${sign} ${percent / 100 * evaluate(express)}`\n                    } else {\n                        res = `${evaluate(express)} ${sign} ${percent / 100}`\n                    }\n\n                    res = evaluate(res)\n                    res = Number.isInteger(res) ? res : +res.toFixed(12)\n                }\n            } else {\n                res = evaluate(expression)\n                res = Number.isInteger(res) ? res : +res.toFixed(12)\n                res = res === Infinity ? '∞' : res === -Infinity ? '-∞' : res\n            }\n\n            setInputValue(res)\n        } catch (e) {\n            setIsError(true)\n            console.log(e.message)\n        }\n    }\n\n    return <>\n        <div className={styles.calculatorWrapper}>\n            <div className={styles.calculator}>\n                <input\n                    ref={ref}\n                    type=\"text\"\n                    disabled\n                    className={isError? `${styles.resultInput} ${styles.calculatingError}` : styles.resultInput}\n                    value={inputValue}\n                />\n\n                <CalcBtns handleClickButton={handleClickButton} />\n                {moreBtns &&\n                    <MoreBtns handleClickButton={handleClickButton} />}\n            </div>\n            <div \n                    className={styles.more}\n                    onClick={() => setMoreBtns(!moreBtns)}\n                >\n                    {moreBtns ? <div className={styles.moreBtns}>Less <div>&lsaquo;</div></div> : <span className={styles.moreBtns}>More <div>&rsaquo;</div></span>}\n                </div>\n        </div>\n        <BackBtn />\n    </>\n}\n\nexport default Calculator"],"sourceRoot":""}