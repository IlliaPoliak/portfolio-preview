{"version":3,"sources":["components/common/BackBtn/BackBtn.jsx","components/common/BackBtn/BackBtn.module.css","components/Works/TextRedactor/TextRedactor.module.css","components/Works/TextRedactor/TextRedactor.jsx"],"names":["connect","state","darkMode","app","className","styles","backBtnWrapper","onClick","window","history","back","backBtn","darkModeStyle","module","exports","TextRedactor","props","redactorText","useRef","useState","strike","setStrike","bold","setBold","italic","setItalic","underline","setUnderline","left","setLeft","center","setCenter","right","setRight","justify","setJustify","redactingText","e","target","innerText","useEffect","style","current","textDecorationLine","fontWeight","fontStyle","textAlign","controlBtn","boldBtn","italicBtn","underlineBtn","lineThroughBtn","active","textRedactorWrapper","areaWrapper","panel","pipe","onChange","fontSize","value","select","fontFamily","name","ref","autoFocus","rows","defaultValue"],"mappings":"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","file":"static/js/13.d7625fcf.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './BackBtn.module.css'\nimport { connect } from 'react-redux';\n\nconst BackBtn = ({ darkMode }) => <div className={styles.backBtnWrapper} onClick={() => window.history.back()}>\n    <div className={darkMode ? styles.backBtn : `${styles.backBtn} ${styles.darkModeStyle}`}>\n        <span>&#10144;</span>&nbsp;Go back\n    </div>\n</div>\n\nexport default connect(state => ({\n    darkMode: state.app.darkMode\n}), {})(BackBtn)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backBtnWrapper\":\"BackBtn_backBtnWrapper__7wkgF\",\"backBtn\":\"BackBtn_backBtn__256f_\",\"darkModeStyle\":\"BackBtn_darkModeStyle__1x3h1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textRedactorWrapper\":\"TextRedactor_textRedactorWrapper__1t6Og\",\"areaWrapper\":\"TextRedactor_areaWrapper__3l0tn\",\"panel\":\"TextRedactor_panel__1Ep29\",\"controlBtn\":\"TextRedactor_controlBtn__1csXl\",\"boldBtn\":\"TextRedactor_boldBtn__LyGn_\",\"italicBtn\":\"TextRedactor_italicBtn__2cQb6\",\"underlineBtn\":\"TextRedactor_underlineBtn__FZmOw\",\"lineThroughBtn\":\"TextRedactor_lineThroughBtn__1x-No\",\"active\":\"TextRedactor_active__2w-R7\",\"pipe\":\"TextRedactor_pipe__1iHg7\",\"insertTextBtn\":\"TextRedactor_insertTextBtn__xp1ZY\",\"select\":\"TextRedactor_select__1kAJS\"};","import React, { useRef, useState, useEffect } from 'react';\nimport styles from './TextRedactor.module.css'\nimport BackBtn from '../../common/BackBtn/BackBtn';\n\nconst TextRedactor = props => {\n    const redactorText = useRef()\n\n    let [strike, setStrike] = useState(false)\n    let [bold, setBold] = useState(false)\n    let [italic, setItalic] = useState(false)\n    let [underline, setUnderline] = useState(false)\n\n    let [left, setLeft] = useState(false)\n    let [center, setCenter] = useState(false)\n    let [right, setRight] = useState(false)\n    let [justify, setJustify] = useState(false)\n\n    const redactingText = e => {\n        switch (e.target.innerText){\n            case 'Ab': \n                setUnderline(false)\n                setStrike(!strike)\n                break\n            case 'B': setBold(!bold)\n                break\n            case 'I': setItalic(!italic)\n                break\n            case 'U': \n                setStrike(false)\n                setUnderline(!underline)\n                break\n            case 'Left': \n                setCenter(false)\n                setRight(false)\n                setJustify(false)\n                setLeft(!left)\n                break\n            case 'Center': \n                setRight(false)\n                setJustify(false)\n                setLeft(false)\n                setCenter(!center)\n                break\n            case 'Right': \n                setCenter(false)\n                setJustify(false)\n                setLeft(false)\n                setRight(!right)\n                break\n            case 'Justify': \n                setCenter(false)\n                setRight(false)\n                setLeft(false)\n                setJustify(!justify)\n                break\n            default: break\n        }\n    }\n\n    const selectFontSize = e => redactorText.current.style.fontSize = e.target.value + 'px'\n    const selectFontFamily = e => redactorText.current.style.fontFamily = e.target.value\n\n    useEffect(()=>{\n        const style = redactorText.current.style\n\n        style.textDecorationLine = strike ? 'line-through' : underline ? 'underline' : 'none'\n        style.fontWeight = bold ? 'bold' : 'normal'\n        style.fontStyle = italic ? 'italic' : 'normal'\n        style.textAlign = left ? 'start' : center ? 'center' : right ? 'end' : justify ? 'justify' : 'start'\n\n    }, [strike, underline, bold, italic, left, center, right, justify])\n\n    const {controlBtn, boldBtn, italicBtn, underlineBtn, lineThroughBtn, active } = styles\n    return(\n        <div className={styles.textRedactorWrapper}>\n            <div className={styles.areaWrapper}>\n                \n                <div className={styles.panel}>\n                    <span onClick={redactingText} className={bold ? `${controlBtn} ${boldBtn} ${active}` : `${controlBtn} ${boldBtn}`}>B</span>\n                    <span onClick={redactingText} className={italic ? `${controlBtn} ${italicBtn} ${active}` : `${controlBtn} ${italicBtn}`}>I</span>\n                    <span onClick={redactingText} className={underline ? `${controlBtn} ${underlineBtn} ${active}` : `${controlBtn} ${underlineBtn}`}>U</span>\n                    <span onClick={redactingText} className={strike ? `${controlBtn} ${lineThroughBtn} ${active}` : `${controlBtn} ${lineThroughBtn}`}>Ab</span>\n                    <span className={styles.pipe}>|</span>\n                    <span onClick={redactingText} className={left ? `${controlBtn} ${active}` : `${controlBtn}`}>Left</span>\n                    <span onClick={redactingText} className={center ? `${controlBtn} ${active}` : `${controlBtn}`}>Center</span>\n                    <span onClick={redactingText} className={right ? `${controlBtn} ${active}` : `${controlBtn}`}>Right</span>\n                    <span onClick={redactingText} className={justify ? `${controlBtn} ${active}` : `${controlBtn}`}>Justify</span>\n                    <span className={styles.pipe}>|</span>\n                    \n                    <select onChange={selectFontSize} className={styles.select}>\n                        <option value=\"14\">14</option>\n                        <option value=\"8\">8</option>\n                        <option value=\"12\">12</option>\n                        <option value=\"16\">16</option>\n                        <option value=\"20\">20</option>\n                        <option value=\"24\">24</option>\n                        <option value=\"28\">28</option>\n                        <option value=\"32\">32</option>\n                    </select>\n\n                    <select onChange={selectFontFamily} className={styles.select}>\n                        <option value=\"'Times New Roman', Times, serif\">Times New Roman</option>\n                        <option value=\"Arial, Helvetica, sans-serif\">Arial</option>\n                        <option value=\"Georgia\">Georgia</option>\n                        <option value=\"Calibri\">Calibri</option>\n                        <option value=\"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\">Verdana</option>\n                        <option value=\"'Lucida Grande',Verdana, monospace\">Lucida</option>\n                        <option value=\"'Courier New', Courier, monospace\">Courier</option>\n                    </select>\n                </div>\n\n                <textarea \n                    name=\"insertText\" \n                    ref={redactorText}\n                    autoFocus\n                    rows=\"10\" \n                    defaultValue='Lorem ipsum dolor sit amet consectetur, adipisicing elit. Adipisci unde asperiores dolorem minus quas ducimus corrupti et vero obcaecati porro nihil aut labore facere, nostrum sit, enim nulla in suscipit?'\n                />\n        \n            </div>\n\n            <BackBtn />\n        </div>\n    )\n}\n\nexport default TextRedactor"],"sourceRoot":""}