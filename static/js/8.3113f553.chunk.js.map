{"version":3,"sources":["components/common/BackBtn/BackBtn.jsx","components/common/BackBtn/BackBtn.module.css","components/common/ControlBtn/ControlBtn.jsx","components/Works/Redactor/Redactor.module.css","components/Works/Redactor/img/noimage.png","components/Works/Redactor/Redactor.jsx"],"names":["connect","state","darkMode","app","className","styles","backBtnWrapper","onClick","window","history","back","backBtn","darkModeStyle","module","exports","func","children","ControlBtn","styled","button","defaults","filePictureInput","useRef","pictureImg","useState","sepia","setSepia","blur","setBlur","brightness","setBrightness","contrast","setContrast","grayscale","setGrayscale","hueRotate","setHueRotate","invert","setInvert","opacity","setOpacity","saturate","setSaturate","setDefaultValues","handleRange","e","value","target","name","useEffect","current","style","filter","Math","round","redactorBlock","darkModeStyles","interface","picture","ref","type","onChange","file","files","reader","FileReader","readAsDataURL","addEventListener","src","URL","createObjectURL","noImg","alt","controls","rangeTitle"],"mappings":"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","file":"static/js/8.3113f553.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './BackBtn.module.css'\nimport { connect } from 'react-redux';\n\nconst BackBtn = ({ darkMode }) => <div className={styles.backBtnWrapper} onClick={() => window.history.back()}>\n    <div className={darkMode ? styles.backBtn : `${styles.backBtn} ${styles.darkModeStyle}`}>\n        <span>&#10144;</span>&nbsp;Go back\n    </div>\n</div>\n\nexport default connect(state => ({\n    darkMode: state.app.darkMode\n}), {})(BackBtn)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backBtnWrapper\":\"BackBtn_backBtnWrapper__7wkgF\",\"backBtn\":\"BackBtn_backBtn__256f_\",\"darkModeStyle\":\"BackBtn_darkModeStyle__1x3h1\"};","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default ({func, children}) => <ControlBtn onClick={func}>{children}</ControlBtn>\r\n\r\nconst ControlBtn = styled.button`\r\n    padding: 10px;\r\n    background-color: var(--blu-sky-color);\r\n    border: 2px solid #f6f6f6;\r\n    font-weight: bold;\r\n    color: #f6f6f6;\r\n    width: 140px;\r\n    transition: all 0.2s ease; \r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: rgb(75, 75, 75);\r\n    }\r\n\r\n    &:active{\r\n        background-color: rgba(43, 43, 43, 0.59);\r\n    }\r\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"redactorBlock\":\"Redactor_redactorBlock__CP4nN\",\"interface\":\"Redactor_interface__JrQoJ\",\"picture\":\"Redactor_picture__2AtED\",\"controls\":\"Redactor_controls__3C6Sb\",\"rangeTitle\":\"Redactor_rangeTitle__327Rt\",\"darkModeStyles\":\"Redactor_darkModeStyles__ez9ng\"};","module.exports = __webpack_public_path__ + \"static/media/noimage.275f4aae.png\";","import React, { useRef, useState, useEffect } from 'react';\nimport {connect} from 'react-redux'\nimport styles from './Redactor.module.css'\nimport noImg from './img/noimage.png'\nimport BackBtn from '../../common/BackBtn/BackBtn';\nimport ControlBtn from '../../common/ControlBtn/ControlBtn';\n\nconst Redactor = ({darkMode}) => {\n\n    const defaults = {\n        sepia: 0,\n        blur: 0,\n        brightness: 50,\n        contrast: 50,\n        grayscale: 0,\n        hueRotate: 0,\n        invert: 0,\n        opacity: 100,\n        saturate: 50\n    }\n\n    const filePictureInput = useRef()\n    const pictureImg = useRef()\n\n    let [sepia, setSepia] = useState(defaults.sepia)\n    let [blur, setBlur] = useState(defaults.blur)\n    let [brightness, setBrightness] = useState(defaults.brightness)\n    let [contrast, setContrast] = useState(defaults.contrast)\n    let [grayscale, setGrayscale] = useState(defaults.grayscale)\n    let [hueRotate, setHueRotate] = useState(defaults.hueRotate)\n    let [invert, setInvert] = useState(defaults.invert)\n    let [opacity, setOpacity] = useState(defaults.opacity)\n    let [saturate, setSaturate] = useState(defaults.saturate)\n\n    const setDefaultValues = () => {\n        setSepia(defaults.sepia)\n        setBlur(defaults.blur)\n        setBrightness(defaults.brightness)\n        setContrast(defaults.contrast)\n        setGrayscale(defaults.grayscale)\n        setHueRotate(defaults.hueRotate)\n        setInvert(defaults.invert)\n        setOpacity(defaults.opacity)\n        setSaturate(defaults.saturate)\n    }\n\n    const handleRange = e => {\n        const value = e.target.value\n\n        switch (e.target.name) {\n            case 'sepia': setSepia(value)\n                break\n            case 'blur': setBlur(value)\n                break\n            case 'brightness': setBrightness(value)\n                break\n            case 'contrast': setContrast(value)\n                break\n            case 'grayscale': setGrayscale(value)\n                break\n            case 'hueRotate': setHueRotate(value)\n                break\n            case 'invert': setInvert(value)\n                break\n            case 'opacity': setOpacity(value)\n                break\n            case 'saturate': setSaturate(value)\n                break\n            default: break\n        }\n    }\n\n    const loadingPicture = () => {\n        const file = filePictureInput.current.files[0]\n\n        if (file && (file.type === \"image/jpeg\" || file.type === \"image/png\")) {\n            setDefaultValues()\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.addEventListener('load', () => pictureImg.current.src = window.URL.createObjectURL(file))\n        }\n    }\n\n    useEffect(() => {\n        pictureImg.current.style.filter = `\n            sepia(${sepia}%)\n            blur(${Math.round(blur / 2)}px)\n            brightness(${brightness * 2}%)\n            contrast(${contrast * 2}%)\n            grayscale(${grayscale}%)\n            hue-rotate(${hueRotate * 3.6}deg)\n            invert(${invert}%)\n            opacity(${opacity}%)\n            saturate(${saturate * 2}%)\n        `\n    }, [sepia, blur, brightness, contrast, grayscale, hueRotate, invert, opacity, saturate])\n\n    return <>\n        <div className={darkMode ? `${styles.redactorBlock} ${styles.darkModeStyles}` : styles.redactorBlock}>\n            <div className={styles.interface}>\n                <label className={styles.picture}>\n                    <input ref={filePictureInput} type=\"file\" name=\"picture\" onChange={loadingPicture} />\n                    <img ref={pictureImg} src={noImg} alt=\"edit\"></img>\n                </label>\n\n                <div className={styles.controls}>\n                    <label>\n                        <span className={styles.rangeTitle}>Sepia</span>\n                        <input type=\"range\" name=\"sepia\" onChange={handleRange} value={sepia} /><span>{sepia}</span>\n                    </label>\n                    <label>\n                        <span className={styles.rangeTitle}>Blur</span>\n                        <input type=\"range\" name=\"blur\" onChange={handleRange} value={blur} /><span>{blur}</span>\n                    </label>\n                    <label>\n                        <span className={styles.rangeTitle}>Brightness</span>\n                        <input type=\"range\" name=\"brightness\" onChange={handleRange} value={brightness} /><span>{brightness}</span>\n                    </label>\n                    <label>\n                        <span className={styles.rangeTitle}>Contrast</span>\n                        <input type=\"range\" name=\"contrast\" onChange={handleRange} value={contrast} /><span>{contrast}</span>\n                    </label>\n                    <label>\n                        <span className={styles.rangeTitle}>Grayscale</span>\n                        <input type=\"range\" name=\"grayscale\" onChange={handleRange} value={grayscale} /><span>{grayscale}</span>\n                    </label>\n                    <label>\n                        <span className={styles.rangeTitle}>Hue rotate</span>\n                        <input type=\"range\" name=\"hueRotate\" onChange={handleRange} value={hueRotate} /><span>{hueRotate}</span>\n                    </label>\n                    <label>\n                        <span className={styles.rangeTitle}>Invert</span>\n                        <input type=\"range\" name=\"invert\" onChange={handleRange} value={invert} /><span>{invert}</span>\n                    </label>\n                    <label>\n                        <span className={styles.rangeTitle}>Opacity</span>\n                        <input type=\"range\" name=\"opacity\" onChange={handleRange} value={opacity} /><span>{opacity}</span>\n                    </label>\n                    <label>\n                        <span className={styles.rangeTitle}>Saturate</span>\n                        <input type=\"range\" name=\"saturate\" onChange={handleRange} value={saturate} /><span>{saturate}</span>\n                    </label>\n                    \n                    <ControlBtn func={setDefaultValues}>Reset</ControlBtn>\n                </div>\n            </div>\n        </div>\n        <BackBtn />\n    </>\n}\n\nexport default connect(state => ({ darkMode: state.app.darkMode }), {})(Redactor);"],"sourceRoot":""}