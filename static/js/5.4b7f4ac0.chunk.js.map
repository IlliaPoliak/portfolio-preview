{"version":3,"sources":["components/common/BackBtn/BackBtn.jsx","components/common/BackBtn/BackBtn.module.css","components/Works/UsersTable/UsersTable.module.css","components/Works/UsersTable/Checkbox/Checkbox.module.css","components/common/Error/Error.jsx","components/common/Message/Message.jsx","components/Works/UsersTable/Checkbox/Checkbox.jsx","components/Works/UsersTable/Icons/Icons.jsx","components/Works/UsersTable/TableRow/TableRow.jsx","components/Works/UsersTable/Search/Search.jsx","components/Works/UsersTable/Table/Table.jsx","components/Works/UsersTable/Button/Button.jsx","components/Works/UsersTable/Title/Title.jsx","components/Works/UsersTable/Popup/Popup.jsx","components/Works/UsersTable/Alert/Alert.jsx","components/Works/UsersTable/Pagination/Pagination.jsx","components/Works/UsersTable/UsersTable.jsx","store/thunks.js"],"names":["connect","state","darkMode","app","className","styles","backBtnWrapper","onClick","window","history","back","backBtn","darkModeStyle","module","exports","errorMessage","style","color","message","display","id","checkedValue","onChange","type","name","checked","checkbox","htmlFor","EditIcon","Icon","xmlns","width","height","viewBox","fillRule","d","DeleteIcon","styled","svg","LIGHT_BLUE","user","setEditMode","deleteUser","checkUser","uncheckUser","USD","currency","setMessage","weight","Math","floor","split","foots","inch","smHeight","year","Date","now","getYear","dateOfBirth","salary","Checkbox","isChecked","firstName","lastName","setTimeout","Input","placeholder","e","target","value","input","usersData","checkAllUsers","uncheckAllUsers","convertCurrency","currentPage","pageSize","allUsersChecked","every","handleChangeExchangeRates","useState","usersList","setUsersList","filteredData","searchText","setSearchText","matchesCount","setMatchesCount","useEffect","count","filter","toUpperCase","includes","sortDirection","setSortDirection","sortField","setSortField","arrow","_","orderBy","onSort","leftBorder","rightBorder","tableFields","Search","text","length","Object","keys","map","key","currencyHeader","i","TableRow","floatRight","children","disabled","float","Button","button","Title","h1","userData","setSalary","salaryValue","setSalaryValue","ceil","toggleDeleteAlert","deleteCheckedUsers","Pagination","totalItemsCount","handlePageNumberClick","nextPageNumber","prevPageNumber","pagesCount","pagesNumbers","push","pages","page","App","setState","this","props","getUsersData","isLoading","isError","editMode","deleteAlert","operationSuccess","Loader","Error","tableWrapper","some","BackBtn","Component","table","dispatch","a","toggleIsLoading","fetch","response","json","data","exchange","rates","usd","newData","setUsersData","setExchangeRates","setErrorMessage"],"mappings":"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","file":"static/js/5.4b7f4ac0.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './BackBtn.module.css'\nimport { connect } from 'react-redux';\n\nconst BackBtn = ({ darkMode }) => <div className={styles.backBtnWrapper} onClick={() => window.history.back()}>\n    <div className={darkMode ? styles.backBtn : `${styles.backBtn} ${styles.darkModeStyle}`}>\n        <span>&#10144;</span>&nbsp;Go back\n    </div>\n</div>\n\nexport default connect(state => ({\n    darkMode: state.app.darkMode\n}), {})(BackBtn)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backBtnWrapper\":\"BackBtn_backBtnWrapper__7wkgF\",\"backBtn\":\"BackBtn_backBtn__256f_\",\"darkModeStyle\":\"BackBtn_darkModeStyle__1x3h1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"UsersTable_app__1FEl_\",\"tableWrapper\":\"UsersTable_tableWrapper__3PhX0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__Lbto_\"};","import React from 'react'\r\n\r\nexport default ({errorMessage}) => (\r\n    <h1 style={{color: 'red'}}>{errorMessage}</h1>\r\n)","import React from 'react'\r\nimport './Message.css'\r\n\r\nexport default ({message, display}) => <div className={ 'message ' + (display ? 'show' : 'hidden')}><h2>{message}</h2></div>","import React from 'react'\r\nimport styles from './Checkbox.module.css'\r\n\r\nexport default ({ id, checkedValue, onChange }) => <>\r\n    <input \r\n        type='checkbox' \r\n        id={id}\r\n        name={id}\r\n        checked={checkedValue}\r\n        name='selectAllUsers' \r\n        onChange={ () => onChange() } \r\n        className={styles.checkbox}\r\n    />\r\n    <label htmlFor={id} />\r\n</>","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { LIGHT_BLUE } from '../../../../constants'\r\n\r\nexport const EditIcon = ({onClick}) => {\r\n    return (\r\n        <Icon \r\n            className='editIcon' \r\n            onClick={ () => onClick() }\r\n            xmlns=\"http://www.w3.org/2000/svg\" \r\n            width=\"15\" height=\"15\" \r\n            viewBox=\"0 0 15 15\">\r\n\r\n            <path fillRule=\"nonzero\" d=\"M12.414.586L14 2.172A2 2 0 0 1 14 5l-9.586 9.586H0v-4.414L9.586.586a2 2 0 0 1 2.828 0zM8.25 4.75L2 11v1.586h1.586l6.249-6.25L8.249 4.75zM11 2L9.664 3.336 11.25 4.92l1.336-1.335L11 2z\" />\r\n        </Icon> \r\n    )\r\n}\r\n\r\nexport const DeleteIcon = ({onClick}) => {\r\n    return (\r\n        <Icon \r\n            className='deleteIcon' \r\n            onClick={ () => onClick() }\r\n            xmlns=\"http://www.w3.org/2000/svg\" \r\n            width=\"16\" height=\"16\" \r\n            viewBox=\"0 0 16 16\">\r\n\r\n            <path fillRule=\"nonzero\" d=\"M3 5v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V5h2v8a3 3 0 0 1-3 3H4a3 3 0 0 1-3-3V5h2zm4 0v8H5V5h2zm4 0v8H9V5h2zM9.382 0a2 2 0 0 1 1.789 1.106l.447.894H16v2h-5.618l-1-2H6.618l-1 2H0V2h4.382l.447-.894A2 2 0 0 1 6.618 0z\" />\r\n        </Icon>\r\n    )\r\n}\r\n\r\nconst Icon = styled.svg`\r\n    fill: \"#4C4C4C\";\r\n\r\n    &:hover{\r\n        fill: ${LIGHT_BLUE};\r\n        cursor: pointer\r\n    } \r\n`\r\n","import React from 'react'\r\nimport Checkbox from '../Checkbox/Checkbox'\r\nimport { EditIcon, DeleteIcon } from '../Icons/Icons'\r\n\r\nexport default ({ user, setEditMode, deleteUser, checkUser, uncheckUser, USD, currency, setMessage }) => {\r\n\r\n    const handleOnChangeCheckbox = (isChecked) => {\r\n        isChecked ? uncheckUser(user.id) : checkUser(user.id)\r\n    }\r\n\r\n    const weight = Math.floor(user.weight / 2.2046)\r\n    const [foots, inch] = user.height.split(/\\D/)\r\n    const smHeight = Math.floor(foots * 30 + inch * 2.54)\r\n    const year = new Date(Date.now()).getYear() - new Date(user.dateOfBirth).getYear()\r\n    const salary = currency === 'USD' ? <span>${user.salary}</span> : <span>&#8364;{Math.floor(user.salary / USD)}</span>\r\n\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <Checkbox\r\n                    id={'user' + user.id}\r\n                    checkedValue={user.isChecked}\r\n                    onChange={() => handleOnChangeCheckbox(user.isChecked)}\r\n                />\r\n            </td>\r\n            <td>\r\n                {user.id + 1}\r\n            </td>\r\n            <td>\r\n                {`${user.firstName} ${user.lastName}`}\r\n            </td>\r\n            <td>\r\n                {year}\r\n            </td>\r\n            <td>\r\n                {smHeight} см\r\n            </td>\r\n            <td>\r\n                {weight} кг\r\n                </td>\r\n            <td>\r\n                {salary}\r\n            </td>\r\n            <td>\r\n                <EditIcon onClick={ () => setEditMode(true, user) } />\r\n            </td>\r\n            <td>\r\n                <DeleteIcon onClick={ () => {\r\n                    deleteUser(user.id)\r\n                    setMessage(true)\r\n                    setTimeout(()=>setMessage(false), 800)\r\n                }} />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react';\nimport styled from 'styled-components'\n\nexport default ({onChange}) => (\n\t<Input \n\t\tclassName='searchInput'\n\t\ttype=\"text\" \n\t\tplaceholder=\"Поиск\" \n\t\tonChange={e => onChange(e.target.value)} \n\t/>\n)\n\nconst Input = styled.input`\n\twidth: 335px;\n    height: 42px;\n    border-radius: 4px;\n    border: solid 1px #c6c6c6;\n    background-color: #ffffff;\n    padding: 13px 24px;\n    box-sizing: border-box;\n    margin: 20px 0 10px 0;\n`","import React, { useState, useEffect } from 'react'\r\nimport './Table.css'\r\nimport TableRow from '../TableRow/TableRow'\r\nimport Checkbox from '../Checkbox/Checkbox'\r\nimport Search from '../Search/Search';\r\nimport _ from 'lodash';\r\n\r\nexport default ({ usersData, setEditMode, deleteUser, checkUser, uncheckUser, checkAllUsers, uncheckAllUsers, USD, currency, convertCurrency, currentPage, pageSize, setMessage }) => {\r\n\r\n    const allUsersChecked = usersData.every(({ isChecked }) => isChecked)\r\n    const handleChangeExchangeRates = () => currency === 'USD' ? convertCurrency('EUR') : convertCurrency('USD')\r\n    const handleChangeCheckbox = () => !allUsersChecked ? checkAllUsers() : uncheckAllUsers()\r\n    const handleChangeSearchInput = text => setSearchText(text)\r\n    let [usersList, setUsersList] = useState(usersData)\r\n\r\n    // searching\r\n    let filteredData = {}\r\n    let [searchText, setSearchText] = useState('')\r\n    let [matchesCount, setMatchesCount] = useState(0)\r\n\r\n    useEffect(() => {\r\n        let count = 0\r\n\r\n        filteredData = usersData.filter(user => {\r\n            if (user.firstName.toUpperCase().includes(searchText.toUpperCase())\r\n                || user.lastName.toUpperCase().includes(searchText.toUpperCase())) {\r\n                count++\r\n                return user\r\n            }\r\n        })\r\n\r\n        setMatchesCount(count)\r\n        setUsersList(filteredData)\r\n    }, [searchText, usersData])\r\n\r\n    // sorting\r\n    let [sortDirection, setSortDirection] = useState('asc')\r\n    let [sortField, setSortField] = useState('id')\r\n    let arrow = sortDirection === 'asc' ? <span>&uarr;</span> : <span>&darr;</span>\r\n\r\n    useEffect(() => setUsersList(_.orderBy(usersList, sortField, sortDirection)), [sortDirection, sortField])\r\n\r\n    const onSort = e => {\r\n        setSortField(e.target.id)\r\n        setSortDirection(sortDirection === 'desc' ? 'asc' : 'desc')\r\n    }\r\n\r\n    // pagination borders\r\n    const leftBorder = currentPage * pageSize - pageSize + 1\r\n    const rightBorder = currentPage * pageSize\r\n\r\n    const tableFields = { id: '№', firstName: 'ФИО', dateOfBirth: 'Возраст (Лет)', height: 'Рост', weight: 'Вес', salary: 'Зарплата' }\r\n\r\n    return (\r\n        <>\r\n            <Search onChange={handleChangeSearchInput} />\r\n            { usersData.length !== matchesCount && <span className='matches-count'>Найдено: {matchesCount}</span> }\r\n\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr className='thead'>\r\n                        <th>\r\n                            <Checkbox\r\n                                id='selectAllUsers'\r\n                                checkedValue={allUsersChecked}\r\n                                onChange={handleChangeCheckbox}\r\n                            />\r\n                        </th>\r\n                        {\r\n                            Object.keys(tableFields).map(key => {\r\n                                if (key === 'salary') {\r\n                                    const currencyHeader = <small className='currency' onClick={handleChangeExchangeRates}>({currency})</small>\r\n                                    \r\n                                    if (key === sortField) {\r\n                                        return <th key={key} id={key} onClick={e => onSort(e)}>{tableFields[key]}{currencyHeader}{arrow}</th>\r\n                                    } else {\r\n                                        return <th key={key} id={key} onClick={e => onSort(e)}>{tableFields[key]}{currencyHeader}</th>\r\n                                    }\r\n                                } else {\r\n                                    if (key === sortField) {\r\n                                        return <th key={key} id={key} onClick={e => onSort(e)}>{tableFields[key]} {arrow}</th>\r\n                                    } else {\r\n                                        return <th key={key} id={key} onClick={e => onSort(e)}>{tableFields[key]}</th>\r\n                                    } \r\n                                }\r\n                            })\r\n                        }\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className='tbody'>\r\n                    {usersList.map((user, i) => {\r\n                        if (i + 1 >= leftBorder && i + 1 <= rightBorder) {\r\n                            return (\r\n                                <TableRow\r\n                                    key={user.id}\r\n                                    user={user}\r\n                                    setEditMode={setEditMode}\r\n                                    deleteUser={deleteUser}\r\n                                    checkUser={checkUser}\r\n                                    uncheckUser={uncheckUser}\r\n                                    USD={USD}\r\n                                    currency={currency}\r\n                                    convertCurrency={convertCurrency}\r\n                                    setMessage={setMessage}\r\n                                />\r\n                            )\r\n                        }\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { LIGHT_BLUE } from '../../../../constants'\r\n\r\nexport default ({ onClick, floatRight, children, disabled, width }) => (\r\n    <Button \r\n        onClick={() => onClick()}\r\n        style={{float: floatRight ? 'right' : 'left', width: width || '222px'}}\r\n        disabled={disabled || false}\r\n    >\r\n        {children}\r\n    </Button>\r\n)\r\n\r\nconst Button = styled.button`\r\n    font-family: Verdana;\r\n    font-weight: bold;\r\n    letter-spacing: 0.2px;\r\n    text-align: center;\r\n    color: #ffffff;\r\n    border: none;\r\n    height: 48px;\r\n    border-radius: 4px;\r\n    box-shadow: 0 12px 18px -6px rgba(0, 59, 133, 0.24), 0 8px 5px -6px rgba(0, 48, 109, 0.43);\r\n    background-color: ${LIGHT_BLUE};\r\n    outline: none;\r\n\r\n    &:hover{\r\n        background-color: #4e9cff;\r\n        cursor: pointer;\r\n    }\r\n\r\n    &:active{\r\n        background-color: #1f61b4;\r\n    }\r\n\r\n    &:disabled{\r\n        background-color: #aaaaaa;\r\n        cursor: not-allowed;\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    letter-spacing: 0.2px;\r\n    margin: 0;\r\n    background-color: 'grey';\r\n    color: ${({darkMode}) => darkMode};\r\n`\r\n\r\nexport default ({darkMode, children}) => (\r\n    <Title darkMode={darkMode ? 'white' : 'black'} className='title'>{children}</Title>\r\n)\r\n\r\n","import React, { useState } from 'react'\r\nimport './Popup.css'\r\nimport Button from '../Button/Button'\r\nimport Title from '../Title/Title'\r\n\r\nexport default ({ userData, setEditMode, setSalary, USD, currency }) => {\r\n\r\n    let [salaryValue, setSalaryValue] = useState(currency === 'USD' ? userData.salary : Math.floor(userData.salary / USD))\r\n\r\n    return (\r\n        <div className='popupContainer'>\r\n            <div className='popup'>\r\n                <div className='popupContent'>\r\n\r\n                    <Title>Редактирование зарплаты</Title>\r\n\r\n                    <div className='popupInfo'>\r\n                        <div className='recipient'>Получатель:</div>\r\n                        <div>{userData.firstName + ' ' + userData.lastName}</div>\r\n                    </div>\r\n\r\n                    <input \r\n                        className='salaryInput'\r\n                        type=\"number\" \r\n                        value={salaryValue} \r\n                        onChange={ e => e.target.value ? setSalaryValue(e.target.value) : true }\r\n                    />\r\n\r\n                    <Button \r\n                        onClick={e => {\r\n                        setEditMode(false, null)\r\n                        setSalary(userData.id, currency === 'USD' ? salaryValue : Math.ceil(salaryValue * USD) )\r\n                    }}>\r\n                        Изменить зарплату\r\n                    </Button>\r\n                </div>\r\n\r\n                <span onClick={() => setEditMode(false, null)} className='btnClosePopup'>&times;</span>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Alert.css'\r\nimport Button from '../Button/Button'\r\nimport Title from '../Title/Title'\r\n\r\nexport default ({ toggleDeleteAlert, deleteCheckedUsers }) => {\r\n\r\n    return (\r\n        <div className='popupContainer'>\r\n            <div className='alert'>\r\n                <Title>Удалить?</Title>\r\n\r\n                <div className='alertBtnsWrapper'>\r\n                    <Button \r\n                        width='100px'\r\n                        onClick={() => toggleDeleteAlert(false)}>\r\n                        Нет\r\n                    </Button>\r\n\r\n                    <Button \r\n                        width='100px'\r\n                        onClick={() => {\r\n                        deleteCheckedUsers()\r\n                        toggleDeleteAlert(false)\r\n                    }}>\r\n                        Да\r\n                    </Button>\r\n                </div>\r\n\r\n                <span onClick={() => toggleDeleteAlert(false)} className='btnClosePopup'>&times;</span>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Pagination.css';\r\n\r\n\r\nconst Pagination = ({ totalItemsCount, pageSize = 6, currentPage, handlePageNumberClick, nextPageNumber, prevPageNumber }) => {\r\n\r\n\tlet pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\tlet pagesNumbers = [];\r\n\r\n\tif (pagesCount > 10 && currentPage <= 7) {\r\n\t\tpagesNumbers = [1, 2, 3, 4, 5, 6, 7, '...', pagesCount - 2, pagesCount - 1, pagesCount];\r\n\t} else if (pagesCount <= 10) {\r\n\t\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\t\tpagesNumbers.push(i);\r\n\t\t}\r\n\t} else if (pagesCount > 10 && currentPage > 7 && currentPage < pagesCount - 4) {\r\n\t\tpagesNumbers = [ 1, '...', currentPage - 3, currentPage - 2, currentPage - 1, currentPage, currentPage + 1, currentPage + 2, currentPage + 3, '...', pagesCount ];\r\n\t} else if (pagesCount > 10 && currentPage >= pagesCount - 4) {\r\n\t\tpagesNumbers = [ 1, 2, '...', pagesCount - 7, pagesCount - 6, pagesCount - 5, pagesCount - 4, pagesCount - 3, pagesCount - 2, pagesCount - 1, pagesCount ];\r\n\t} \r\n\r\n\tlet pages = pagesNumbers.map( (page, i) => (\r\n\t\t<div key={i}>\r\n\t\t\t<button\r\n\t\t\t\tdisabled={page === '...' ? true : false}\r\n\t\t\t\tonClick={() => handlePageNumberClick(page)}\r\n\t\t\t\tclassName={ currentPage === +page ? 'paginationBtn currentPage' : 'paginationBtn' }\r\n\t\t\t>\r\n\t\t\t\t{`${page}`}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div className='pagination'>\r\n\t\t\t<div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='paginationBtn'\r\n\t\t\t\t\tdisabled={currentPage > 1 ? false : true}\r\n\t\t\t\t\tonClick={ () => prevPageNumber() }\r\n\t\t\t\t>&larr;</button>\r\n\t\t\t</div>\r\n\t\t\t<div className='pagesWrapper'>{pages}</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='paginationBtn'\r\n\t\t\t\t\tdisabled={currentPage < pagesCount ? false : true}\r\n\t\t\t\t\tonClick={() => nextPageNumber() }\r\n\t\t\t\t>&rarr;</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n\tsetEditMode, setSalary, toggleDeleteAlert, setMessage,\n\tdeleteUser, checkUser, uncheckUser, checkAllUsers, uncheckAllUsers, deleteCheckedUsers, \n\tconvertCurrency\n} from '../../../store/actions'\nimport { getUsersData } from '../../../store/thunks'\nimport styles from './UsersTable.module.css'\n\nimport Loader from '../../common/Loader/Loader'\nimport Error from '../../common/Error/Error'\nimport Message from '../../common/Message/Message'\n\nimport Table from './Table/Table'\nimport Popup from './Popup/Popup'\nimport Title from './Title/Title'\nimport Button from './Button/Button'\nimport Alert from './Alert/Alert'\nimport Pagination from './Pagination/Pagination'\nimport BackBtn from '../../common/BackBtn/BackBtn';\n\nclass App extends Component {\n\n\tcomponentDidMount() {\n\t\tthis.props.getUsersData()\n\t}\n\n\tstate = {\n\t\tcurrentPage: 1,\n\t\tpageSize: 6,\n\t}\n\n\thandlePageNumberClick = page => {\n\t\tthis.setState({\n\t\t\tcurrentPage: page\n\t\t})\n\t}\n\n\tnextPageNumber = () => {\n\t\tthis.setState({\n\t\t\tcurrentPage: this.state.currentPage + 1\n\t\t})\n\t}\n\n\tprevPageNumber = () => {\n\t\tthis.setState({\n\t\t\tcurrentPage: this.state.currentPage - 1\n\t\t})\n\t}\n\n\trender() {\n\t\tlet { \n\t\t\tisLoading, isError, usersData, editMode, setEditMode, userData, setSalary, toggleDeleteAlert, deleteAlert, darkMode,\n\t\t\tdeleteUser, checkUser, uncheckUser, checkAllUsers, uncheckAllUsers, deleteCheckedUsers, \n\t\t\tUSD, currency, convertCurrency, operationSuccess, setMessage\n\t\t} = this.props\n\n\t\tlet totalItemsCount = usersData ? usersData.length : 0\n\n\t\treturn (\n\t\t\t<div className={styles.app}>\n\t\t\t\t{\tisLoading ? <Loader />\n\n\t\t\t\t\t: isError ? <Error errorMessage={isError} /> \n\n\t\t\t\t\t: usersData &&  \n\t\t\t\t\t<div className={styles.tableWrapper}>\n\n\t\t\t\t\t\t<Title darkMode={darkMode}>Таблица пользователей</Title>\n\n\t\t\t\t\t\t<Table \n\t\t\t\t\t\t\tusersData={usersData} \n\t\t\t\t\t\t\tsetEditMode={setEditMode} \n\t\t\t\t\t\t\tdeleteUser={deleteUser} \n\t\t\t\t\t\t\tcheckUser={checkUser} \n\t\t\t\t\t\t\tuncheckUser={uncheckUser} \n\t\t\t\t\t\t\tcheckAllUsers={checkAllUsers} \n\t\t\t\t\t\t\tuncheckAllUsers={uncheckAllUsers} \n\t\t\t\t\t\t\tUSD={USD}\n\t\t\t\t\t\t\tcurrency={currency}\n\t\t\t\t\t\t\tconvertCurrency={convertCurrency}\n\t\t\t\t\t\t\tsetMessage={setMessage}\n\t\t\t\t\t\t\tcurrentPage={this.state.currentPage}\n\t\t\t\t\t\t\tpageSize={this.state.pageSize}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tdisabled={ usersData.some( ({isChecked}) => isChecked ) ? false : true}\n\t\t\t\t\t\t\tonClick={ () => toggleDeleteAlert(true) }  \n\t\t\t\t\t\t\tfloatRight\n\t\t\t\t\t\t>Удалить выбранные</Button>\n\n\t\t\t\t\t\t<Pagination \n\t\t\t\t\t\t\ttotalItemsCount={totalItemsCount}\n\t\t\t\t\t\t\tcurrentPage={this.state.currentPage}\n\t\t\t\t\t\t\tpageSize={this.state.pageSize}\n\t\t\t\t\t\t\thandlePageNumberClick={this.handlePageNumberClick}\n\t\t\t\t\t\t\tnextPageNumber={this.nextPageNumber}\n\t\t\t\t\t\t\tprevPageNumber={this.prevPageNumber}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{editMode && <Popup userData={userData} setEditMode={setEditMode} setSalary={setSalary} USD={USD} currency={currency} />}\n\t\t\t\t\t\t{deleteAlert && <Alert userData={userData} toggleDeleteAlert={toggleDeleteAlert} deleteCheckedUsers={deleteCheckedUsers} />}\n\t\t\t\t\t\t<Message message='Success operation' display={operationSuccess} />\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t<BackBtn />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tstate => ({\n\t\tisLoading: state.app.isLoading,\n\t\tisError: state.app.isError,\n\t\toperationSuccess: state.app.operationSuccess,\n\t\tusersData: state.table.usersData,\n\t\teditMode: state.table.editMode,\n\t\tdeleteAlert: state.table.deleteAlert,\n\t\tuserData: state.table.userData,\n\t\tUSD: state.table.USD,\n\t\tcurrency: state.table.currency,\n\t\tdarkMode: state.app.darkMode\n\t}), { \n\t\tgetUsersData, setEditMode, setSalary, toggleDeleteAlert, setMessage,\n\t\tdeleteUser, checkUser, uncheckUser, checkAllUsers, uncheckAllUsers, deleteCheckedUsers, \n\t\tconvertCurrency\n\t}\n)(App)\n","import {\r\n    toggleIsLoading,\r\n    setUsersData,\r\n    setErrorMessage,\r\n    setExchangeRates\r\n} from './actions'\r\n\r\n\r\nexport const getUsersData = () => async dispatch => {\r\n    try {\r\n        dispatch(toggleIsLoading(true))\r\n\r\n        // получаем данные пользователей\r\n        let response = await fetch('https://api.myjson.com/bins/5z1rq')\r\n        let data = await response.json()\r\n\r\n        // получаем текущий курс валют\r\n        let exchange = await fetch('https://api.exchangeratesapi.io/latest')\r\n        let rates = await exchange.json()\r\n        let usd = rates.rates.USD\r\n        \r\n        // добавляем ID, ставим USD валютой по умолчанию, добавляем флаг isChecked\r\n        let newData = data.map( (user, i) => ({ id: i, ...user, salary: Math.floor(user.salary * usd), isChecked: false }) )\r\n\r\n        dispatch(setUsersData(newData))\r\n        dispatch(setExchangeRates(usd))\r\n        dispatch(toggleIsLoading(false))\r\n\r\n    } catch (e) {\r\n        dispatch(toggleIsLoading(false))\r\n        dispatch(setErrorMessage(e.message))\r\n    }\r\n}\r\n"],"sourceRoot":""}