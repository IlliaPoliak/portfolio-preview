{"version":3,"sources":["components/common/BackBtn/BackBtn.jsx","components/common/BackBtn/BackBtn.module.css","components/common/ControlBtn/ControlBtn.jsx","components/Works/Tests/TestPage.module.css","components/Works/Tests/AddTestForm.jsx","components/Works/Tests/Tests.jsx","components/Works/Tests/TestPage.jsx"],"names":["connect","state","darkMode","app","className","styles","backBtnWrapper","onClick","window","history","back","backBtn","darkModeStyle","module","exports","func","children","ControlBtn","styled","button","variants","AddTestForm","id","props","nextId","question","answer","chooseRightVariant","e","setState","target","value","testForm","questionBlock","type","placeholder","onChange","map","v","i","key","defaultChecked","name","controlBtnWrapper","handleSubmit","closeAddForm","React","Component","Tests","tests","checkingAnswer","testsWrapper","test","testWrapper","whiteQuestion","variantsWrapper","Object","entries","testing","addTest","useState","userAnswer","setUserAnswer","endOfTest","setEndOfTest","startTest","setStartTest","setAddTest","correct","setCorrect","useEffect","length","testBlock","darkModeStyles","buttons","resultData","some","item","question_id","console","log","classList","true","false","user_answer","data","preventDefault","a","b","c","d","BackBtn"],"mappings":"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","file":"static/js/10.46262329.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './BackBtn.module.css'\nimport { connect } from 'react-redux';\n\nconst BackBtn = ({ darkMode }) => <div className={styles.backBtnWrapper} onClick={() => window.history.back()}>\n    <div className={darkMode ? styles.backBtn : `${styles.backBtn} ${styles.darkModeStyle}`}>\n        <span>&#10144;</span>&nbsp;Go back\n    </div>\n</div>\n\nexport default connect(state => ({\n    darkMode: state.app.darkMode\n}), {})(BackBtn)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backBtnWrapper\":\"BackBtn_backBtnWrapper__7wkgF\",\"backBtn\":\"BackBtn_backBtn__256f_\",\"darkModeStyle\":\"BackBtn_darkModeStyle__1x3h1\"};","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default ({func, children}) => <ControlBtn onClick={func}>{children}</ControlBtn>\r\n\r\nconst ControlBtn = styled.button`\r\n    padding: 10px;\r\n    background-color: var(--blu-sky-color);\r\n    border: 2px solid #f6f6f6;\r\n    font-weight: bold;\r\n    color: #f6f6f6;\r\n    width: 140px;\r\n    transition: all 0.2s ease; \r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: rgb(75, 75, 75);\r\n    }\r\n\r\n    &:active{\r\n        background-color: rgba(43, 43, 43, 0.59);\r\n    }\r\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testBlock\":\"TestPage_testBlock__TDzms\",\"darkModeStyles\":\"TestPage_darkModeStyles__2X1Hp\",\"buttons\":\"TestPage_buttons__NcQkG\",\"testsWrapper\":\"TestPage_testsWrapper__1OTnV\",\"testWrapper\":\"TestPage_testWrapper__3RtmI\",\"test\":\"TestPage_test__3bJyN\",\"true\":\"TestPage_true__8ksRx\",\"false\":\"TestPage_false__1M44q\",\"variantsWrapper\":\"TestPage_variantsWrapper__R2Yao\",\"testForm\":\"TestPage_testForm__uF77u\",\"resultData\":\"TestPage_resultData__3FMCw\",\"questionBlock\":\"TestPage_questionBlock__32y70\",\"variantSelect\":\"TestPage_variantSelect__34J2R\",\"controlBtnWrapper\":\"TestPage_controlBtnWrapper__3DkHX\"};","import React from 'react';\nimport styles from './TestPage.module.css'\nimport ControlBtn from '../../common/ControlBtn/ControlBtn';\n\nconst variants = ['a', 'b', 'c', 'd']\n\nclass AddTestForm extends React.Component {\n\n    state = {\n        id: this.props.nextId + 1,\n        question: '',\n        answer: 'a',\n        variants: { 'a': '', 'b': '', 'c': '', 'd': '' }\n    }\n\n    chooseRightVariant = e => this.setState({ answer: e.target.value })\n\n    render() {\n        return (\n            <form>\n                <div className={styles.testForm}>\n                    <label className={styles.questionBlock}> Введите вопрос:<br />\n                        <input\n                            type=\"text\"\n                            placeholder='Вопрос'\n                            onChange={e => this.setState({ question: e.target.value })} />\n                    </label>\n\n                    {variants.map((v, i) => <div key={v} className={styles.variants}>\n                        <input\n                            defaultChecked={i === 0 ? true : false}\n                            type=\"radio\" name=\"rightAnswer\"\n                            value={v}\n                            onChange={this.chooseRightVariant}\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder={v + ')'}\n                            onChange={e => this.setState({ variants: { ...this.state.variants, [v]: e.target.value } })}\n                        />\n                    </div>)\n                    }\n                </div>\n\n                <div className={styles.controlBtnWrapper}>\n                    <ControlBtn func={e => this.props.handleSubmit(this.state, e)}>Сохранить</ControlBtn>\n                    <ControlBtn func={() => this.props.closeAddForm()}>Отмена</ControlBtn>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default AddTestForm;\n","import React from 'react';\nimport styles from './TestPage.module.css'\n\nconst Tests = ({ tests, checkingAnswer, darkMode }) => (\n    <div className={styles.testsWrapper}>\n        {tests.map(test => (\n            <div key={test.id} className={styles.testWrapper}>\n                <h3 className={darkMode ? styles.whiteQuestion : ''}>{test.question}</h3>\n                <div className={styles.variantsWrapper}>\n                    {Object.entries(test.variants).map(([key, value], i) => (\n                        <div\n                            key={test.id + value}\n                            onClick={e => checkingAnswer(test, key, e)}\n                            className={styles.test}\n                        >\n                            {key}) {value}\n                        </div>)\n                    )}\n                </div>\n            </div>\n        ))}\n    </div>\n)\n\nexport default Tests\n","import React, { useState, useEffect } from 'react';\nimport {connect} from 'react-redux'\nimport styles from './TestPage.module.css'\nimport AddTestForm from './AddTestForm';\nimport Tests from './Tests';\nimport BackBtn from '../../common/BackBtn/BackBtn';\nimport ControlBtn from '../../common/ControlBtn/ControlBtn';\nimport { addTest } from '../../../store/actions'\n\n\nconst TestPage = props => {\n\n    let [userAnswer, setUserAnswer] = useState([])\n    let [endOfTest, setEndOfTest] = useState(false)\n    let [startTest, setStartTest] = useState(false)\n    let [addTest, setAddTest] = useState(false)\n    let [correct, setCorrect] = useState(0)\n\n    useEffect(() => {\n        if (userAnswer.length === props.tests.length) {\n            setEndOfTest(true)\n        }\n    }, [userAnswer, props.tests.length])\n\n    const checkingAnswer = (question, answer, e) => {\n\n        const check = userAnswer.some(item => item.question_id === question.id)\n\n        if (!check) {\n            if (question.answer === answer) {\n                e.target.classList += ' ' + styles.true\n                setCorrect(correct + 1)\n            } else {\n                e.target.classList += ' ' + styles.false\n            }\n\n            setUserAnswer([\n                ...userAnswer, {\n                    question_id: question.id,\n                    user_answer: answer\n                }\n            ])\n        } else {\n            console.log('You already answered!')\n        }\n    }\n\n    const repeatTest = () => {\n        setCorrect(0)\n        setUserAnswer([])\n        setEndOfTest(false)\n    }\n\n    const start = () => {\n        setStartTest(true)\n        setCorrect(0)\n        setEndOfTest(false)\n        setUserAnswer([])\n        setAddTest(false)\n    }\n\n    const finish = () => {\n        setStartTest(false)\n        setEndOfTest(false)\n    }\n\n    const addQuestion = () => {\n        setStartTest(false)\n        setAddTest(true)\n    }\n\n    const closeAddForm = () => setAddTest(false)\n\n    const handleSubmit = (data, e) => {\n        e.preventDefault()\n\n        if (data.question !== '' && data.answer !== '' && data.variants.a !== '' && data.variants.b !== '' && data.variants.c !== '' && data.variants.d !== '') {\n            props.addTest(data)\n            setAddTest(false)\n        }\n    }\n\n    return (\n        <div className={props.darkMode ? `${styles.testBlock} ${styles.darkModeStyles}` : styles.testBlock}>\n\n            {!startTest && !addTest && <div className={styles.buttons}>\n                <ControlBtn func={start}>Начать тест</ControlBtn>\n                <ControlBtn func={addQuestion}>Добавить вопрос</ControlBtn>\n            </div>}\n\n            {startTest && <div className={styles.resultData}>\n                <Tests tests={props.tests} checkingAnswer={checkingAnswer} darkMode={props.darkMode} />\n                <ControlBtn func={finish}>Закончить тест</ControlBtn>\n            </div>\n            }\n            {endOfTest &&\n                <div className={styles.resultData}>\n                    <h3>Результаты:</h3>\n                    <p>Всего: {props.tests.length} </p>\n                    <p>Правильных: {correct}</p>\n                    <p>Неправильных: {props.tests.length - correct}</p>\n\n                    <ControlBtn func={repeatTest}>Повторить</ControlBtn>\n                </div>\n            }\n            {addTest && <AddTestForm handleSubmit={handleSubmit} nextId={props.tests.length} closeAddForm={closeAddForm} />}\n\n            <BackBtn />\n        </div>\n    )\n}\n\nexport default connect(state => ({\n\ttests: state.testing.tests,\n\tdarkMode: state.app.darkMode\n}), { addTest })(TestPage)\n"],"sourceRoot":""}