{"version":3,"sources":["components/common/BackBtn/BackBtn.jsx","components/common/BackBtn/BackBtn.module.css","components/Works/Register/Register.module.css","components/Works/Register/Register.jsx","components/Works/Register/validators.js"],"names":["connect","state","darkMode","app","className","styles","backBtnWrapper","onClick","window","history","back","backBtn","darkModeStyle","module","exports","Input","input","label","type","required","meta","touched","error","field","errorMessage","errorField","placeholder","compose","regData","register","reduxForm","form","validate","values","errors","login","length","email","test","password","repeat","props","formWrapper","sex","status","button","id","onSubmit","handleSubmit","Field","name","component","value","htmlFor","disabled","pristine","submitting","BackBtn"],"mappings":"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","file":"static/js/12.8a4eba03.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './BackBtn.module.css'\nimport { connect } from 'react-redux';\n\nconst BackBtn = ({ darkMode }) => <div className={styles.backBtnWrapper} onClick={() => window.history.back()}>\n    <div className={darkMode ? styles.backBtn : `${styles.backBtn} ${styles.darkModeStyle}`}>\n        <span>&#10144;</span>&nbsp;Go back\n    </div>\n</div>\n\nexport default connect(state => ({\n    darkMode: state.app.darkMode\n}), {})(BackBtn)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backBtnWrapper\":\"BackBtn_backBtnWrapper__7wkgF\",\"backBtn\":\"BackBtn_backBtn__256f_\",\"darkModeStyle\":\"BackBtn_darkModeStyle__1x3h1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Register_formWrapper__Q1x86\",\"required\":\"Register_required__pN-dz\",\"errorField\":\"Register_errorField__UHNdF\",\"field\":\"Register_field__14-Ii\",\"errorMessage\":\"Register_errorMessage__30Cy9\",\"sex\":\"Register_sex__QUe2D\",\"button\":\"Register_button__1AwUB\"};","import React from 'react';\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport styles from './Register.module.css'\nimport { validate } from './validators'\nimport BackBtn from '../../common/BackBtn/BackBtn';\n\n\nconst Input = ({ input, label, type, required, meta: { touched, error } }) => {\n    const { field, errorMessage, errorField } = styles\n\n    return (\n        <div className={field}>\n            <label>{label}: {required && <span className={styles.required}>*</span>}\n                {touched && error && <span className={errorMessage}>{error}</span>}\n                <input\n                    {...input}\n                    type={type}\n                    placeholder={label}\n                    className={touched && error ? errorField : ''}\n                />\n            </label>\n        </div>\n    )\n}\n\nconst Register = (props) => {\n\n    const { formWrapper, sex, status, button } = styles\n\n    // console.log(props)\n    return <div className={formWrapper}>\n        <form id='register' onSubmit={props.handleSubmit}>\n\n            <Field\n                name=\"login\"\n                component={Input}\n                type=\"text\"\n                label=\"Login\"\n                required\n            />\n\n            <Field\n                name=\"email\"\n                component={Input}\n                type=\"email\"\n                label=\"Email\"\n                required\n            />\n\n            <div className={sex}>\n                <label>Sex</label>\n                <div>\n                    <label>\n                        <Field name=\"sex\" component=\"input\" type=\"radio\" value=\"male\" />\n                        Male\n                </label>\n                    <label>\n                        <Field name=\"sex\" component=\"input\" type=\"radio\" value=\"female\" />\n                        Female\n                </label>\n                </div>\n\n                <label htmlFor=\"employed\">Employed</label>\n                <Field\n                    name=\"employed\"\n                    id=\"employed\"\n                    component=\"input\"\n                    label=\"Emloyed\"\n                    type=\"checkbox\"\n                />\n            </div>\n\n            <div className={status}>\n                <label>Marital status</label>\n                <Field name=\"status\" component=\"select\">\n                    <option />\n                    <option value=\"married\">Maried</option>\n                    <option value=\"single\">Single</option>\n                </Field>\n            </div>\n\n            <Field\n                name=\"password\"\n                component={Input}\n                type=\"password\"\n                label=\"Password\"\n                required\n            />\n\n            <Field\n                name=\"repeat\"\n                component={Input}\n                type=\"password\"\n                label=\"Password (repeat)\"\n                required\n            />\n\n            <button type=\"submit\" disabled={props.pristine || props.submitting} className={button}>Registration</button>\n        </form>\n\n        <BackBtn />\n    </div>\n}\n\nexport default compose(\n    connect(state => ({\n        regData: state.register.regData,\n        // initialValues: {\n        //     login: 'Log',\n        //     email: 'polak@ukr.net',\n        //     sex: 'male',\n        //     employed: true,\n        //     status: 'single',\n        //     password: '11111111',\n        //     repeat: '11111111'\n        // }\n    }), {}),\n    reduxForm({\n        form: 'registration',\n        validate\n    })\n)(Register);","export const validate = values => {\r\n    const errors ={}\r\n\r\n    if (!values.login){\r\n        errors.login = 'Field is required'\r\n    } else if ( values.login.length > 50 ) {\r\n        errors.login = 'Count of characters must be 50 or less'\r\n    } \r\n    \r\n    if (!values.email) {\r\n        errors.email = 'Field is required!'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n\r\n    if ( !values.password || values.password.length < 8){\r\n        errors.password = \"Password can't be less than 8 characters\"\r\n    }\r\n\r\n    if (values.repeat !== values.password){\r\n        errors.repeat = 'Passwords do not match'\r\n    }\r\n\r\n    return errors\r\n}"],"sourceRoot":""}